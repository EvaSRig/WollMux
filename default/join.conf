# Dies ist eine Default-Config-Datei.

# Die SENDER_SOURCE legt fest, welche Datenquelle als Hauptdatenquelle
# für die Suche des aktuellen Absenders im WollMux verwendet werden soll.
SENDER_SOURCE "Personal"

%include "ldap.conf"

Datenquellen(

  Datenquelle(
    NAME "MitarbeiterDieNichtImLDAPStehen"
    TYPE "conf"
    URL "phantome.conf"
    Schluessel("Vorname" "Nachname" "Rolle")
  )
  Datenquelle(
    NAME "MitarbeiterDieNichtImLDAPStehen"
    TYPE "schema"
    SOURCE "MitarbeiterDieNichtImLDAPStehen"
    ADD("OID")
  )
  
  Datenquelle(
    NAME "Personal"
    TYPE "union"
    SOURCE1 "MitarbeiterDieNichtImLDAPStehen"
    SOURCE2 "ldap"
      # Achtung! Wenn in SOURCE1 und SOURCE2 Datensätze mit dem selben
      # Schlüsselwert sind, so kann dies unerwünschte Folgen haben.
      # Im Briefkopfsystem zum Beispiel würde das Hinzufügen eines der
      # Datensätze zur persönlichen Absenderliste beim nächsten Neustart
      # dazu führen, dass alle Datensätze mit dem entsprechenden Schlüssel
      # auf der Absenderliste sind.
      # Die Schemata beider Datenquellen müssen identisch sein.
  )

  Datenquelle(
    NAME "LDAPFixes"
    TYPE "conf"
    URL "ldapfixes.conf"
    Schluessel("OID")
  )
  
  Datenquelle(
    NAME "ldap_gefixt"
    TYPE "prefer"
    SOURCE "LDAPFixes"
    OVER "ldap"
     # Die Schemata beider Datenquellen müssen identisch sein.
  )

  Datenquelle( 
    NAME "verkehrsverbindungen"
    TYPE "conf"
    URL "verkehrsverbindungen.conf"
    Schluessel("Adresse")
  )


  Datenquelle(
    NAME "PersonalMitVerkehrsverbindungen"

    TYPE "attach"
    
    SOURCE "ldap"
    ATTACH "verkehrsverbindungen"
    MATCH ("Dienstgebaeude" "Adresse")
    
      # Zur Erstellung der Menge der Ergebnisdatensätze
      # wird jeder Datensatz aus SOURCE genau einmal verwendet und 
      # jeder Datensatz aus ATTACH beliebig oft (auch keinmal).
      # Unterschiede zu einem richtigen Join:
      #  a) Verhindert, dass eine Person 2 mal auftaucht, nur weil es 2 
      #     Einträge mit Verkehrsverbindungen für ihre Adresse gibt
      #  b) Verhindert, dass eine Person rausfliegt, weil es zu ihrer 
      #     Adresse keine
      #     Verkehrsverbindung gibt
      # c) Die Schlüssel der Ergebnisdatensätze bleiben die aus SOURCE
      #    und werden nicht kombiniert aus SOURCE und ATTACH. Das 
      #    verhindert, dass ein Datensatz bei einer Änderung der 
      #    Adresse aus der lokalen Absenderliste fliegt, weil er beim 
      #    Cache-Refresh nicht mehr gefunden wird.
      #
      # In der Ergebnisdatenquelle sind alle Spalten von SOURCE unter
      # ihrem ursprünglichen Namen, alle Spalten von ATTACH unter dem
      # Namen von ATTACH konkateniert mit "__" (Doppel-Unterstrich) 
      # konkateniert mit dem Spaltennamen zu finden. Falls ein so
      # generierter Name mit einem Spaltennamen aus SOURCE1 kollidiert
      # gibt dies einen Fehler.
      #
      # Argument gegen automatische Umbenennung/Aliase für Spalten aus
      # ATTACH, deren Name sich nicht mit einer Spalte aus SOURCE stört:
      # - Der Alias würde verschwinden, wenn die Quelle SOURCE später einmal
      #   um eine Spalte mit dem entsprechenden Namen erweitert wird.
      #   Definitionen, die den Alias verwendet haben verwenden ab da 
      #   stillschweigend die Spalte aus SOURCE, was schwierig zu findende
      #   Fehler nach sich ziehen kann.
  )


  
  Datenquelle(
    NAME "Personal"
    TYPE "schema"
    SOURCE "PersonalMitVerkehrsverbindungen"
    RENAME("verkehrsverbindungen__OPNV1" "OPNV1")
    RENAME("verkehrsverbindungen__OPNV2" "OPNV2")
    RENAME("verkehrsverbindungen__OPNV3" "OPNV3")
    RENAME("verkehrsverbindungen__OPNV4" "OPNV4")
    DROP("verkehrsverbindungen__Adresse")
    
     # Achtung! Wird eine Spalte "A" umbenannt in "B", so ist eine evtl.
     # vorher existierende Spalte "B" damit unerreichbar geworden.
     # Die Schlüssel der Datensätze ändern sich auch bei Umbenennung
     # von Schlüsselspalten nicht.
     # Der erste Spaltenname in einer RENAME() Anweisung bezieht sich
     # immer auf die Originalspalten. Vorhergehende RENAME() Anweisungen
     # sind dabei noch nicht berücksichtigt. Deswegen ist es möglich, 2
     # Spalten wie folgt zu vertauschen:
     # RENAME("A" "B")
     # RENAME("B" "A")
  )
  
  Datenquelle( 
    NAME "DienstBezLang"
    TYPE "conf"
    URL "DienstBezLang.conf"
    Schluessel("DienstBezKurz" "Anrede")
  )

  Datenquelle(
    NAME "PersonalMitDienstBezLang"

    TYPE "attach"
    
    SOURCE "Personal"
    ATTACH "DienstBezLang"
    MATCH ("DienstBezKurz" "Anrede")
  )
  
  Datenquelle(
    NAME "Personal"
    TYPE "schema"
    SOURCE "PersonalMitDienstBezLang"
    RENAME("DienstBezLang__DienstBezLang" "DienstBezLang")
    DROP("DienstBezLang__DienstBezKurz")
    DROP("DienstBezLang__Anrede")
  )
)
