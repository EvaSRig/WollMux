/*
 * Dateiname: XPrintModel.idl
 * Projekt  : WollMux
 * Funktion : Repräsentiert die Schnittstelle WollMux Komfortdruckfunktionen
 * 
 * Copyright: Landeshauptstadt München
 *
 * @author Christoph Lutz (D-III-ITD 5.1)
 * @version 1.0
 * 
 */

#ifndef __de_muenchen_allg_itd51_wollmux_XPrintModel_idl__ 
#define __de_muenchen_allg_itd51_wollmux_XPrintModel_idl__ 
 
#include <com/sun/star/uno/XInterface.idl> 
#include <com/sun/star/text/XTextDocument.idl> 
  
module de {  module muenchen {  module allg { module itd51 { module wollmux {
 
/** 
  Repräsentiert die Schnittstelle WollMux Komfortdruckfunktionen.
 */
interface XPrintModel
{

    /**
      Liefert das XTextDocument mit dem die Druckfunktion aufgerufen wurde.
     */
	com::sun::star::text::XTextDocument getTextDocument();

    /**
      Druckt das TextDocument mit numberOfCopies Ausfertigungen auf dem aktuell
      eingestellten Drucker aus.
     */
	void print( [in] short numberOfCopies);
	
    /**
      Zeigt den PrintSetupDialog an, über den der aktuelle Drucker ausgewählt
      und geändert werden kann.
      
      @param onlyOnce
               Gibt an, dass der Dialog nur beim ersten Aufruf (aus Sicht eines
               Dokuments) der Methode angezeigt wird. Wurde bereits vor dem
               Aufruf ein PrintSetup-Dialog gestartet, so öffnet sich der
               Dialog nicht und die Methode endet ohne Aktion.
     */
	void showPrinterSetupDialog( [in] boolean onlyOnce);
		
    /**
      Falls das TextDocument Sachleitende Verfügungen enthält, ist es mit
      dieser Methode möglich, den Verfügungspunkt mit der Nummer verfPunkt
      auszudrucken, wobei alle darauffolgenden Verfügungspunkte ausgeblendet
      werden.
      
      @param verfPunkt
               Die Nummer des auszuduruckenden Verfügungspunktes, wobei alle
               folgenden Verfügungspunkte ausgeblendet werden.
      @param numberOfCopies
               Die Anzahl der Ausfertigungen, in der verfPunkt ausgedruckt
               werden soll.
      @param isDraft
               wenn isDraft==true, werden alle draftOnly-Blöcke eingeblendet,
               ansonsten werden sie ausgeblendet.
      @param isOriginal
               wenn isOriginal, wird die Ziffer des Verfügungspunktes I
               ausgeblendet und alle notInOriginal-Blöcke ebenso. Andernfalls
               sind Ziffer und notInOriginal-Blöcke eingeblendet.
     */
	void printVerfuegungspunkt( [in] short verfPunkt, [in] short numberOfCopies, [in] boolean isDraft, [in] boolean isOriginal);

    /**
      Falls es sich bei dem zugehörigen Dokument um ein Formulardokument (mit
      einer Formularbeschreibung) handelt, wird das Formularfeld mit der ID id
      auf den neuen Wert value gesetzt und alle von diesem Formularfeld
      abhängigen Formularfelder entsprechend angepasst. Handelt es sich beim
      zugehörigen Dokument um ein Dokument ohne Formularbeschreibung, so werden
      nur alle insertFormValue-Kommandos dieses Dokuments angepasst, die die ID
      id besitzen.
      
      @param id
               Die ID des Formularfeldes, dessen Wert verändert werden soll.
               Ist die FormGUI aktiv, so werden auch alle von id abhängigen
               Formularwerte neu gesetzt.
      @param value
               Der neue Wert des Formularfeldes id
     */
	void setFormValue( [in] string id, [in] string value);

    /**
      Liefert true, wenn das Dokument als "modifiziert" markiert ist und damit
      z.B. die "Speichern?" Abfrage vor dem Schließen erscheint.
      
      Manche Druckfunktionen verändern u.U. den Inhalt von Dokumenten. Trotzdem
      kann es sein, dass eine solche Druckfunktion den "Modifiziert"-Status des
      Dokuments nicht verändern darf um ungewünschte "Speichern?"-Abfragen zu
      verhindern. In diesem Fall kann der "Modifiziert"-Status mit folgendem
      Konstrukt innerhalb der Druckfunktion unverändert gehalten werden:
      
      boolean modified = pmod.getDocumentModified();
      
      ...die eigentliche Druckfunktion, die das Dokument verändert...
      
      pmod.setDocumentModified(modified);
     */
	boolean getDocumentModified();

    /**
      Diese Methode setzt den DocumentModified-Status auf modified.
     */
	void setDocumentModified( [in] boolean modified);	
};

}; }; }; }; };
 
#endif
